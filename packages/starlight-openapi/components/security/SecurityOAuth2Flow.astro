---
import type { SecuritySchemeOAuth2Flow } from '../../libs/security'
import Text from '../Text.astro'

interface Props {
  flow: SecuritySchemeOAuth2Flow
  type: string
}

const { flow, type } = Astro.props
---

<Text label="Flow type">
  <code>{type}</code>
</Text>

{
  'authorizationUrl' in flow && (
    <Text code label="Authorization URL">
      <a href={flow.authorizationUrl}>{flow.authorizationUrl}</a>
    </Text>
  )
}
{
  'tokenUrl' in flow && (
    <Text code label="Token URL">
      <a href={flow.tokenUrl}>{flow.tokenUrl}</a>
    </Text>
  )
}
{
  'refreshUrl' in flow && (
    <Text code label="Refresh URL">
      <a href={flow.refreshUrl}>{flow.refreshUrl}</a>
    </Text>
  )
}
{
  Object.keys(flow.scopes).length > 0 && (
    <>
      <Text>
        <b>Scopes:</b>
      </Text>
      <ul>
        {Object.entries(flow.scopes).map(([scope, description]) => (
          <li>
            <code>{scope}</code> - {description}
          </li>
        ))}
      </ul>
    </>
  )
}
