---
import {
  getProperties,
  isAdditionalPropertiesWithSchemaObject,
  isSchemaObject,
  type SchemaObject,
} from '../../libs/schemaObject'

import Schema from './SchemaObject.astro'
import SchemaObjectObjectProperties from './SchemaObjectObjectProperties.astro'

interface Props {
  schemaObject: SchemaObject
}

const { schemaObject } = Astro.props

const properties = getProperties(schemaObject)
---

<!-- // TODO(HiDeoo)  -->{schemaObject.minProperties && <div>Min Properties: {schemaObject.minProperties}</div>}
{schemaObject.maxProperties && <div>Max Properties: {schemaObject.maxProperties}</div>}
<SchemaObjectObjectProperties {properties} required={schemaObject.required} />
{
  schemaObject.allOf &&
    schemaObject.allOf.map((allOfSchemaObject) =>
      isSchemaObject(allOfSchemaObject) ? (
        <SchemaObjectObjectProperties
          properties={getProperties(allOfSchemaObject)}
          required={allOfSchemaObject.required}
        />
      ) : null,
    )
}
{
  schemaObject.additionalProperties && (
    <li>
      <div>Additional Properties</div>
      {schemaObject.additionalProperties === true ? (
        <div>Any additional properties are allowed</div>
      ) : isAdditionalPropertiesWithSchemaObject(schemaObject.additionalProperties) ? (
        <Schema schemaObject={schemaObject.additionalProperties} />
      ) : null}
    </li>
  )
}
