---
import { getNullable, getSchemaObjects, isSchemaObjectObject, type SchemaObject } from '../../libs/schemaObject'
import Example from '../example/Example.astro'
import ExternalDocs from '../ExternalDocs.astro'
import Items from '../Items.astro'
import Md from '../Md.astro'

import SchemaObjectObject from './SchemaObjectObject.astro'
import SchemaObjects from './SchemaObjects.astro'

interface Props {
  hideExample?: boolean | undefined
  schemaObject: SchemaObject
}

const { hideExample = false, schemaObject } = Astro.props

const schemaObjects = getSchemaObjects(schemaObject)

const hasMany = schemaObjects !== undefined
const isNegated = schemaObject.not !== undefined
---

{
  hasMany ? (
    // TODO(HiDeoo)
    <SchemaObjects discriminator={schemaObject.discriminator} {schemaObjects} />
  ) : isNegated ? (
    <div>
      TODO(HiDeoo) NOT Type: <Astro.self schemaObject={schemaObject.not} />{' '}
    </div>
  ) : (
    <>
      <Md text={schemaObject.description} />
      <ExternalDocs docs={schemaObject.externalDocs} />
      {isSchemaObjectObject(schemaObject) ? (
        <SchemaObjectObject {schemaObject} />
      ) : (
        <Items items={schemaObject} nullable={getNullable(schemaObject)} />
      )}
      {!hideExample && schemaObject.example && <Example raw={schemaObject.example} />}
    </>
  )
}
