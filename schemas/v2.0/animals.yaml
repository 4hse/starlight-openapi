---
swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Animals'
  license:
    name: 'MIT'
basePath: '/api'
paths:
  /animals:
    get:
      description: 'Returns all animals'
      operationId: 'findAnimals'
      produces:
        - 'application/json'
        - 'application/xml'
        - 'text/xml'
        - 'text/html'
      parameters:
        - name: 'tags'
          in: 'query'
          description: 'tags to filter by'
          required: false
          type: 'array'
          items:
            type: 'string'
          maxItems: 10
          minItems: 1
          uniqueItems: true
        - name: 'sort'
          in: 'query'
          description: 'sort order'
          required: false
          type: 'string'
          enum: ['asc', 'desc']
        - name: 'limit'
          in: 'query'
          description: 'maximum number of animals to return'
          default: 10
          maximum: 100
          exclusiveMaximum: true
          minimum: 1
          multipleOf: 2
          required: false
          type: 'integer'
          format: 'int32'
        - name: 'filter'
          in: 'query'
          description: 'specify a filter query'
          required: false
          type: 'string'
          maxLength: 100
          minLength: 3
          pattern: '^[a-zA-Z0-9]+$'
      responses:
        '200':
          description: 'animal response'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Animal'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/Error'
    post:
      description: 'Creates a new animal'
      operationId: 'addAnimal'
      produces:
        - 'application/json'
      parameters:
        - name: 'animal'
          in: 'body'
          description: 'Animal to add'
          required: true
          schema:
            $ref: '#/definitions/NewAnimal'
      responses:
        '200':
          description: 'animal response'
          schema:
            $ref: '#/definitions/Animal'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/Error'
  /cats:
    post:
      description: 'Creates a new cat'
      operationId: 'addCat'
      produces:
        - 'application/json'
      parameters:
        - name: 'cat'
          in: 'body'
          description: 'Cat to add'
          required: true
          schema:
            allOf:
              - $ref: '#/definitions/NewAnimal'
              - type: 'object'
                required:
                  - 'age'
                properties:
                  age:
                    type: 'integer'
                    format: 'int32'
      responses:
        '200':
          description: 'animal response'
          schema:
            $ref: '#/definitions/Animal'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/Error'
  /birds:
    post:
      description: 'Creates a new bird'
      operationId: 'addBird'
      produces:
        - 'application/json'
      parameters:
        - name: 'bird'
          in: 'body'
          description: 'Bird to add'
          required: true
          schema:
            oneOf:
              - type: 'string'
                description: 'bird name'
              - type: 'object'
                properties:
                  name:
                    type: 'string'
      responses:
        '200':
          description: 'animal response'
          schema:
            $ref: '#/definitions/Animal'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/Error'
definitions:
  Animal:
    type: 'object'
    allOf:
      - $ref: '#/definitions/NewAnimal'
      - required:
          - 'id'
        properties:
          id:
            type: 'integer'
            format: 'int64'
  NewAnimal:
    type: 'object'
    description: 'A representation of an animal'
    required:
      - 'name'
    properties:
      name:
        type: 'string'
      tag:
        type: 'string'
    minProperties: 1
    maxProperties: 4
    additionalProperties:
      type: number
  Error:
    type: 'object'
    required:
      - 'code'
      - 'message'
    properties:
      code:
        type: 'integer'
        format: 'int32'
      message:
        type: 'string'
